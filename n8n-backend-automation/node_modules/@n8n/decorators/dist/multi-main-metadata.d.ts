import type { Class } from './types';
export declare const LEADER_TAKEOVER_EVENT_NAME = "leader-takeover";
export declare const LEADER_STEPDOWN_EVENT_NAME = "leader-stepdown";
export type MultiMainEvent = typeof LEADER_TAKEOVER_EVENT_NAME | typeof LEADER_STEPDOWN_EVENT_NAME;
type EventHandlerFn = () => Promise<void> | void;
export type EventHandlerClass = Class<Record<string, EventHandlerFn>>;
type EventHandler = {
    eventHandlerClass: EventHandlerClass;
    methodName: string;
    eventName: MultiMainEvent;
};
export declare class MultiMainMetadata {
    private readonly handlers;
    register(handler: EventHandler): void;
    getHandlers(): EventHandler[];
}
export {};
