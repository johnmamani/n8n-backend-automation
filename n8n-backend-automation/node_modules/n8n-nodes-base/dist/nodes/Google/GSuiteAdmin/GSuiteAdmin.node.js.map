{"version":3,"sources":["../../../../nodes/Google/GSuiteAdmin/GSuiteAdmin.node.ts"],"sourcesContent":["import type {\n\tIExecuteFunctions,\n\tIDataObject,\n\tILoadOptionsFunctions,\n\tINodeExecutionData,\n\tINodePropertyOptions,\n\tINodeType,\n\tINodeTypeDescription,\n} from 'n8n-workflow';\nimport { NodeConnectionTypes, NodeOperationError } from 'n8n-workflow';\n\nimport { googleApiRequest, googleApiRequestAllItems } from './GenericFunctions';\nimport { groupFields, groupOperations } from './GroupDescripion';\nimport { userFields, userOperations } from './UserDescription';\n\nexport class GSuiteAdmin implements INodeType {\n\tdescription: INodeTypeDescription = {\n\t\tdisplayName: 'Google Workspace Admin',\n\t\tname: 'gSuiteAdmin',\n\t\t// eslint-disable-next-line n8n-nodes-base/node-class-description-icon-not-svg\n\t\ticon: 'file:google-workspace-admin.png',\n\t\tgroup: ['input'],\n\t\tversion: 1,\n\t\tsubtitle: '={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}',\n\t\tdescription: 'Consume Google Workspace Admin API',\n\t\tdefaults: {\n\t\t\tname: 'Google Workspace Admin',\n\t\t},\n\t\tusableAsTool: true,\n\t\tinputs: [NodeConnectionTypes.Main],\n\t\toutputs: [NodeConnectionTypes.Main],\n\t\tcredentials: [\n\t\t\t{\n\t\t\t\tname: 'gSuiteAdminOAuth2Api',\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t],\n\t\tproperties: [\n\t\t\t{\n\t\t\t\tdisplayName: 'Resource',\n\t\t\t\tname: 'resource',\n\t\t\t\ttype: 'options',\n\t\t\t\tnoDataExpression: true,\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Group',\n\t\t\t\t\t\tvalue: 'group',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'User',\n\t\t\t\t\t\tvalue: 'user',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: 'user',\n\t\t\t},\n\t\t\t...groupOperations,\n\t\t\t...groupFields,\n\t\t\t...userOperations,\n\t\t\t...userFields,\n\t\t],\n\t};\n\n\tmethods = {\n\t\tloadOptions: {\n\t\t\t// Get all the domains to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getDomains(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst domains = await googleApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'domains',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/directory/v1/customer/my_customer/domains',\n\t\t\t\t);\n\t\t\t\tfor (const domain of domains) {\n\t\t\t\t\tconst domainName = domain.domainName;\n\t\t\t\t\tconst domainId = domain.domainName;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: domainName,\n\t\t\t\t\t\tvalue: domainId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t\t// Get all the schemas to display them to user so that they can\n\t\t\t// select them easily\n\t\t\tasync getSchemas(this: ILoadOptionsFunctions): Promise<INodePropertyOptions[]> {\n\t\t\t\tconst returnData: INodePropertyOptions[] = [];\n\t\t\t\tconst schemas = await googleApiRequestAllItems.call(\n\t\t\t\t\tthis,\n\t\t\t\t\t'schemas',\n\t\t\t\t\t'GET',\n\t\t\t\t\t'/directory/v1/customer/my_customer/schemas',\n\t\t\t\t);\n\t\t\t\tfor (const schema of schemas) {\n\t\t\t\t\tconst schemaName = schema.displayName;\n\t\t\t\t\tconst schemaId = schema.schemaName;\n\t\t\t\t\treturnData.push({\n\t\t\t\t\t\tname: schemaName,\n\t\t\t\t\t\tvalue: schemaId,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn returnData;\n\t\t\t},\n\t\t},\n\t};\n\n\tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n\t\tconst items = this.getInputData();\n\t\tconst returnData: INodeExecutionData[] = [];\n\t\tconst length = items.length;\n\t\tconst qs: IDataObject = {};\n\t\tlet responseData;\n\t\tconst resource = this.getNodeParameter('resource', 0);\n\t\tconst operation = this.getNodeParameter('operation', 0);\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\ttry {\n\t\t\t\tif (resource === 'group') {\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/insert\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst email = this.getNodeParameter('email', i) as string;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(this, 'POST', '/directory/v1/groups', body);\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/delete\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/directory/v1/groups/${groupId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/directory/v1/groups/${groupId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tObject.assign(qs, options);\n\n\t\t\t\t\t\tif (qs.customer === undefined) {\n\t\t\t\t\t\t\tqs.customer = 'my_customer';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'groups',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/groups',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/groups',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.groups;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/groups/update\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst groupId = this.getNodeParameter('groupId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {};\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/directory/v1/groups/${groupId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resource === 'user') {\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/insert\n\t\t\t\t\tif (operation === 'create') {\n\t\t\t\t\t\tconst domain = this.getNodeParameter('domain', i) as string;\n\n\t\t\t\t\t\tconst firstName = this.getNodeParameter('firstName', i) as string;\n\n\t\t\t\t\t\tconst lastName = this.getNodeParameter('lastName', i) as string;\n\n\t\t\t\t\t\tconst password = this.getNodeParameter('password', i) as string;\n\n\t\t\t\t\t\tconst username = this.getNodeParameter('username', i) as string;\n\n\t\t\t\t\t\tconst makeAdmin = this.getNodeParameter('makeAdmin', i) as boolean;\n\n\t\t\t\t\t\tconst additionalFields = this.getNodeParameter('additionalFields', i);\n\n\t\t\t\t\t\tconst body: IDataObject = {\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\tfamilyName: lastName,\n\t\t\t\t\t\t\t\tgivenName: firstName,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t\tprimaryEmail: `${username}@${domain}`,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tObject.assign(body, additionalFields);\n\n\t\t\t\t\t\tif (additionalFields.phoneUi) {\n\t\t\t\t\t\t\tconst phones = (additionalFields.phoneUi as IDataObject).phoneValues as IDataObject[];\n\n\t\t\t\t\t\t\tbody.phones = phones;\n\n\t\t\t\t\t\t\tdelete body.phoneUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (additionalFields.emailUi) {\n\t\t\t\t\t\t\tconst emails = (additionalFields.emailUi as IDataObject).emailValues as IDataObject[];\n\n\t\t\t\t\t\t\tbody.emails = emails;\n\n\t\t\t\t\t\t\tdelete body.emailUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t'/directory/v1/users',\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (makeAdmin) {\n\t\t\t\t\t\t\tawait googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'POST',\n\t\t\t\t\t\t\t\t`/directory/v1/users/${responseData.id}/makeAdmin`,\n\t\t\t\t\t\t\t\t{ status: true },\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData.isAdmin = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/delete\n\t\t\t\t\tif (operation === 'delete') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'DELETE',\n\t\t\t\t\t\t\t`/directory/v1/users/${userId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresponseData = { success: true };\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/get\n\t\t\t\t\tif (operation === 'get') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\n\t\t\t\t\t\tconst projection = this.getNodeParameter('projection', i) as string;\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tqs.projection = projection;\n\n\t\t\t\t\t\tObject.assign(qs, options);\n\n\t\t\t\t\t\tif (qs.customFieldMask) {\n\t\t\t\t\t\t\tqs.customFieldMask = (qs.customFieldMask as string[]).join(' ');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.projection === 'custom' && qs.customFieldMask === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'When projection is set to custom, the custom schemas field must be defined',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t`/directory/v1/users/${userId}`,\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/list\n\t\t\t\t\tif (operation === 'getAll') {\n\t\t\t\t\t\tconst returnAll = this.getNodeParameter('returnAll', i);\n\n\t\t\t\t\t\tconst projection = this.getNodeParameter('projection', i) as string;\n\n\t\t\t\t\t\tconst options = this.getNodeParameter('options', i);\n\n\t\t\t\t\t\tqs.projection = projection;\n\n\t\t\t\t\t\tObject.assign(qs, options);\n\n\t\t\t\t\t\tif (qs.customer === undefined) {\n\t\t\t\t\t\t\tqs.customer = 'my_customer';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.customFieldMask) {\n\t\t\t\t\t\t\tqs.customFieldMask = (qs.customFieldMask as string[]).join(' ');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (qs.projection === 'custom' && qs.customFieldMask === undefined) {\n\t\t\t\t\t\t\tthrow new NodeOperationError(\n\t\t\t\t\t\t\t\tthis.getNode(),\n\t\t\t\t\t\t\t\t'When projection is set to custom, the custom schemas field must be defined',\n\t\t\t\t\t\t\t\t{ itemIndex: i },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (returnAll) {\n\t\t\t\t\t\t\tresponseData = await googleApiRequestAllItems.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'users',\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/users',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tqs.maxResults = this.getNodeParameter('limit', i);\n\n\t\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t'GET',\n\t\t\t\t\t\t\t\t'/directory/v1/users',\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresponseData = responseData.users;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//https://developers.google.com/admin-sdk/directory/v1/reference/users/update\n\t\t\t\t\tif (operation === 'update') {\n\t\t\t\t\t\tconst userId = this.getNodeParameter('userId', i) as string;\n\n\t\t\t\t\t\tconst updateFields = this.getNodeParameter('updateFields', i);\n\n\t\t\t\t\t\tconst body: {\n\t\t\t\t\t\t\tname: { givenName?: string; familyName?: string };\n\t\t\t\t\t\t\temails?: IDataObject[];\n\t\t\t\t\t\t\tphones?: IDataObject[];\n\t\t\t\t\t\t} = { name: {} };\n\n\t\t\t\t\t\tObject.assign(body, updateFields);\n\n\t\t\t\t\t\tif (updateFields.firstName) {\n\t\t\t\t\t\t\tbody.name.givenName = updateFields.firstName as string;\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.firstName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.lastName) {\n\t\t\t\t\t\t\tbody.name.familyName = updateFields.lastName as string;\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.lastName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Object.keys(body.name).length === 0) {\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.name;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.phoneUi) {\n\t\t\t\t\t\t\tconst phones = (updateFields.phoneUi as IDataObject).phoneValues as IDataObject[];\n\n\t\t\t\t\t\t\tbody.phones = phones;\n\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.phoneUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateFields.emailUi) {\n\t\t\t\t\t\t\tconst emails = (updateFields.emailUi as IDataObject).emailValues as IDataObject[];\n\n\t\t\t\t\t\t\tbody.emails = emails;\n\n\t\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\t\tdelete body.emailUi;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresponseData = await googleApiRequest.call(\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t'PUT',\n\t\t\t\t\t\t\t`/directory/v1/users/${userId}`,\n\t\t\t\t\t\t\tbody,\n\t\t\t\t\t\t\tqs,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst executionData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\tthis.helpers.returnJsonArray(responseData as IDataObject[]),\n\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t);\n\n\t\t\t\treturnData.push(...executionData);\n\t\t\t} catch (error) {\n\t\t\t\tif (this.continueOnFail()) {\n\t\t\t\t\tconst executionErrorData = this.helpers.constructExecutionMetaData(\n\t\t\t\t\t\tthis.helpers.returnJsonArray({ error: error.message }),\n\t\t\t\t\t\t{ itemData: { item: i } },\n\t\t\t\t\t);\n\t\t\t\t\treturnData.push(...executionErrorData);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [returnData];\n\t}\n}\n"],"mappings":"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","names":[]}