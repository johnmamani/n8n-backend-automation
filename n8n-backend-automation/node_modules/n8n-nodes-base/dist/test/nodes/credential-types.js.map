{"version":3,"sources":["../../../test/nodes/credential-types.ts"],"sourcesContent":["import { Service } from '@n8n/di';\nimport type { ICredentialType, ICredentialTypes } from 'n8n-workflow';\n\nimport { LoadNodesAndCredentials } from './load-nodes-and-credentials';\n\n@Service()\nexport class CredentialTypes implements ICredentialTypes {\n\tconstructor(private readonly loadNodesAndCredentials: LoadNodesAndCredentials) {}\n\n\trecognizes(type: string): boolean {\n\t\treturn this.loadNodesAndCredentials.recognizesCredential(type);\n\t}\n\n\tgetByName(type: string): ICredentialType {\n\t\treturn this.loadNodesAndCredentials.getCredential(type).type;\n\t}\n\n\tgetSupportedNodes(type: string): string[] {\n\t\treturn this.loadNodesAndCredentials.known.credentials[type]?.supportedNodes ?? [];\n\t}\n\n\tgetParentTypes(_type: string): string[] {\n\t\treturn [];\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwB;AAMjB,IAAM,kBAAN,MAAkD;AAAA,EACxD,YAA6B,yBAAkD;AAAlD;AAAA,EAAmD;AAAA,EAEhF,WAAW,MAAuB;AACjC,WAAO,KAAK,wBAAwB,qBAAqB,IAAI;AAAA,EAC9D;AAAA,EAEA,UAAU,MAA+B;AACxC,WAAO,KAAK,wBAAwB,cAAc,IAAI,EAAE;AAAA,EACzD;AAAA,EAEA,kBAAkB,MAAwB;AACzC,WAAO,KAAK,wBAAwB,MAAM,YAAY,IAAI,GAAG,kBAAkB,CAAC;AAAA,EACjF;AAAA,EAEA,eAAe,OAAyB;AACvC,WAAO,CAAC;AAAA,EACT;AACD;AAlBa,kBAAN;AAAA,MADN,mBAAQ;AAAA,GACI;","names":[]}