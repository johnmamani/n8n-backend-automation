{"version":3,"sources":["../../../test/nodes/load-nodes-and-credentials.ts"],"sourcesContent":["import { Service } from '@n8n/di';\nimport { LazyPackageDirectoryLoader } from 'n8n-core';\nimport type {\n\tICredentialType,\n\tINodeType,\n\tIVersionedNodeType,\n\tKnownNodesAndCredentials,\n\tLoadedClass,\n\tLoadingDetails,\n} from 'n8n-workflow';\n\n/** This rewrites the nodes/credentials source path to load the typescript code instead of the compiled javascript code */\nconst fixSourcePath = (loadInfo: LoadingDetails) => {\n\tif (!loadInfo) return;\n\tloadInfo.sourcePath = loadInfo.sourcePath.replace(/^dist\\//, './').replace(/\\.js$/, '.ts');\n};\n\n@Service()\nexport class LoadNodesAndCredentials {\n\tprivate loader: LazyPackageDirectoryLoader;\n\n\treadonly known: KnownNodesAndCredentials = { nodes: {}, credentials: {} };\n\n\tconstructor(baseDir: string) {\n\t\tthis.loader = new LazyPackageDirectoryLoader(baseDir);\n\t}\n\n\tasync init() {\n\t\tawait this.loader.loadAll();\n\t\tthis.known.credentials = this.loader.known.credentials;\n\t\tthis.known.nodes = this.loader.known.nodes;\n\t}\n\n\trecognizesCredential(credentialType: string): boolean {\n\t\treturn credentialType in this.known.credentials;\n\t}\n\n\tgetCredential(credentialType: string): LoadedClass<ICredentialType> {\n\t\tfixSourcePath(this.known.credentials[credentialType]);\n\t\treturn this.loader.getCredential(credentialType);\n\t}\n\n\tgetNode(fullNodeType: string): LoadedClass<INodeType | IVersionedNodeType> {\n\t\tconst nodeType = fullNodeType.split('.')[1];\n\t\tfixSourcePath(this.known.nodes[nodeType]);\n\t\treturn this.loader.getNode(nodeType);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwB;AACxB,sBAA2C;AAW3C,MAAM,gBAAgB,CAAC,aAA6B;AACnD,MAAI,CAAC,SAAU;AACf,WAAS,aAAa,SAAS,WAAW,QAAQ,WAAW,IAAI,EAAE,QAAQ,SAAS,KAAK;AAC1F;AAGO,IAAM,0BAAN,MAA8B;AAAA,EAKpC,YAAY,SAAiB;AAF7B,SAAS,QAAkC,EAAE,OAAO,CAAC,GAAG,aAAa,CAAC,EAAE;AAGvE,SAAK,SAAS,IAAI,2CAA2B,OAAO;AAAA,EACrD;AAAA,EAEA,MAAM,OAAO;AACZ,UAAM,KAAK,OAAO,QAAQ;AAC1B,SAAK,MAAM,cAAc,KAAK,OAAO,MAAM;AAC3C,SAAK,MAAM,QAAQ,KAAK,OAAO,MAAM;AAAA,EACtC;AAAA,EAEA,qBAAqB,gBAAiC;AACrD,WAAO,kBAAkB,KAAK,MAAM;AAAA,EACrC;AAAA,EAEA,cAAc,gBAAsD;AACnE,kBAAc,KAAK,MAAM,YAAY,cAAc,CAAC;AACpD,WAAO,KAAK,OAAO,cAAc,cAAc;AAAA,EAChD;AAAA,EAEA,QAAQ,cAAmE;AAC1E,UAAM,WAAW,aAAa,MAAM,GAAG,EAAE,CAAC;AAC1C,kBAAc,KAAK,MAAM,MAAM,QAAQ,CAAC;AACxC,WAAO,KAAK,OAAO,QAAQ,QAAQ;AAAA,EACpC;AACD;AA7Ba,0BAAN;AAAA,MADN,mBAAQ;AAAA,GACI;","names":[]}